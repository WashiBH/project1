openapi: '3.0.0'

info:
  version: 1.0.0
  title: Accounts
  description: Gesti√≥n de cuentas bancarias

servers:
  - url: http://localhost:8582
tags:
  - name: accounts
  - name: holders
paths:
  /accounts:
    post:
      tags:
        - accounts
      summary: Save Account
      operationId: saveAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountReq'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRes'
    get:
      tags:
        - accounts
      summary: Get accounts
      operationId: getAccounts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountRes'
  /accounts/{id}:
    get:
      tags:
        - accounts
      summary: Get Account by id
      operationId: getAccountById
      parameters:
        - name: id
          in: path
          description: Unique id of an account
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRes'
    put:
      tags:
        - accounts
      summary: Update Account
      operationId: updateAccount
      parameters:
        - name: id
          in: path
          description: Unique id of an account
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountReq'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRes'
  /accounts/clients/{id}:
    get:
      tags:
        - accounts
      summary: Get Account by client
      operationId: getAccountsByClient
      parameters:
        - name: id
          in: path
          description: Unique id of an account
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountClientRes'
  /holders:
    post:
      tags:
        - holders
      summary: Save Holder
      operationId: saveHolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HolderReq'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderRes'
  /holders/{id}:
    put:
      tags:
        - holders
      summary: Update Holder
      operationId: updateHolder
      parameters:
        - name: id
          in: path
          description: Unique id of an holder
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HolderReq'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderRes'

components:
  schemas:
    AccountReq:
      type: object
      description: Data element for account
      properties:
        type:
          type: string
          enum:
            - AHORRO
            - CORRIENTE
            - PLAZO_FIJO
        client:
          type: string
        balance:
          type: number
      required:
        - type
        - client
        - balance
    AccountRes:
      type: object
      description: Data element for account
      properties:
        accountId:
          type: string
        accountNumber:
          type: string
        type:
          type: string
        client:
          type: string
        balance:
          type: number
    AccountClientRes:
      type: object
      description: Data element for account
      properties:
        accountId:
          type: string
        accountNumber:
          type: string
        type:
          type: string
        client:
          type: string
        balance:
          type: number
        holders:
          type: array
          items:
            $ref: '#/components/schemas/HolderRes'
    HolderReq:
      type: object
      description: Data element for holder
      properties:
        account:
          type: string
        authorized:
          type: string
          enum:
            - SI
            - NO
        names:
          type: string
    HolderRes:
      type: object
      description: Data element for holder
      properties:
        holderId:
          type: string
        account:
          type: string
        authorized:
          type: string
        names:
          type: string