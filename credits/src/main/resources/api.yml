openapi: '3.0.0'

info:
  version: 1.0.0
  title: Creditos o prestamos
  description: Gesti√≥n de creditos

servers:
  - url: http://localhost:8583

tags:
  - name: credits
  - name: clients

paths:
  /credits:
    post:
      tags:
        - credits
      summary: Save Credit
      operationId: saveCredit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditReq'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditRes'
    get:
      tags:
        - credits
      summary: Get credits
      operationId: getCredits
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditRes'
  /credits/{id}:
    get:
      tags:
        - credits
      summary: Get Credit by id
      operationId: getCreditById
      parameters:
        - name: id
          in: path
          description: Unique id of an credit
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditRes'
    put:
      tags:
        - credits
      summary: Update Credit
      operationId: updateCredit
      parameters:
        - name: id
          in: path
          description: Unique id of a credit
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditReq'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditRes'
  /clients/{clientId}/credit-card:
    get:
      tags:
        - clients
      summary: Get response if client has a credit card
      operationId: getIfClientHasCreditCard
      parameters:
        - name: clientId
          in: path
          description: Unique clientId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistClientCreditCardRes'
  /clients/{clientId}/credits:
    get:
      tags:
        - clients
      summary: Get client credits response.
      operationId: getClientCredits
      parameters:
        - name: clientId
          in: path
          description: Unique clientId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditRes'
components:
  schemas:
    CreditReq:
      type: object
      description: Data element for credit
      properties:
        creditId:
          type: string
        type:
          type: string
          enum:
            - PERSONA
            - EMPRESA
            - TARJETA_CREDITO
        client:
          type: string
        amount:
          type: number
      required:
        - type
        - client
        - amount
    CreditRes:
      type: object
      description: Data element for credit
      properties:
        creditId:
          type: string
        type:
          type: string
        client:
          type: string
        amount:
          type: number
      required:
        - type
        - client
        - amount
    ExistClientCreditCardRes:
      type: object
      description: Data element for exists client credit card response
      properties:
        value:
          type: string